input {
	beats {
		port => 5001
	}
}
## Add your filters / logstash plugins configuration here

filter {
	## Condição para retirar a tag padrão dos beats.
	if "beats_input_codec_plain_applied" in [tags] {
		mutate {
			remove_tag => ["beats_input_codec_plain_applied"]
		}
	}
	## Template de filtro para logs do JMeter.
	if "check_requisicao_https" in [tags] {
		## Filtro grok para separar os campos.
		grok {
			match => [
				"message", "%{BASE10NUM:timestamp};(?<data>\b\d{2,4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d+\b);(?<status>\b\w+\b)(?<codigoRespota>\b[\w\d;\.\]\s\)\(\[\{\},]?*\b)"
			]
		}
		mutate {
			gsub => ["codigoRespota",";",""]
		}
		## Excluindo os dados caso essa tag apareça.
		if "_grokparsefailure" in [tags] {
			drop { }
		}
	}
	if "log_check_wmq_CAL.SENDLISTEDEQUITYTOCAL.INP" in [tags] {
		## Filtro grok para separar os campos.
		grok {
			match => [
				"message", "%{BASE10NUM:timestamp};(?<data>\b\d{2,4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d+\b);(?<status>\b\w+\b)(?<codigoRespota>\b[\w\d;\.\]\s\)\(\[\{\},]?*\b)"
			]
		}
		mutate {
			gsub => ["codigoRespota",";",""]
		}
		## Excluindo os dados caso essa tag apareça.
		if "_grokparsefailure" in [tags] {
			drop { }
		}
	}
	if "check_rabbit_mq_manual_taxbatch_queue" in [tags] {
		## Filtro grok para separar os campos.
		grok {
			match => [
				"message", "%{BASE10NUM:timestamp};(?<data>\b\d{2,4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d+\b);(?<status>\b\w+\b)(?<codigoRespota>\b[\w\d;\.\]\s\)\(\[\{\},]?*\b)"
			]
		}
		mutate {
			gsub => ["codigoRespota",";",""]
		}
		## Excluindo os dados caso essa tag apareça.
		if "_grokparsefailure" in [tags] {
			drop { }
		}
	}
	if "check_conexao_sqlserver" in [tags] {
		## Filtro grok para separar os campos.
		grok {
			match => [
				"message", "%{BASE10NUM:timestamp};(?<data>\b\d{2,4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d+\b);(?<status>\b\w+\b)(?<codigoRespota>\b[\w\d;\.\]\s\)\(\[\{\},]?*\b)"
			]
		}mutate {
			gsub => ["codigoRespota",";",""]
		}
		## Excluindo os dados caso essa tag apareça.
		if "_grokparsefailure" in [tags] {
			drop { }
		}
	}
}

output {
	if "check_requisicao_https" in [tags] {
		elasticsearch {
			hosts => ["elasticsearch:9200"]
			index => "check_requisicao_https-%{+YYYY.MM.dd}"
		}
	}
	if "log_check_wmq_CAL.SENDLISTEDEQUITYTOCAL.INP" in [tags] {
		elasticsearch {
			hosts => ["elasticsearch:9200"]
			index => "check_requisicao_https-%{+YYYY.MM.dd}"
		}
	}
	if "check_rabbit_mq_manual_taxbatch_queue" in [tags] {
		elasticsearch {
			hosts => ["elasticsearch:9200"]
			index => "check_requisicao_https-%{+YYYY.MM.dd}"
		}
	}
	if "check_conexao_sqlserver" in [tags] {
		elasticsearch {
			hosts => ["elasticsearch:9200"]
			index => "check_requisicao_https-%{+YYYY.MM.dd}"
		}
	}
	#stdout {}
	#stdout { codec => rubydebug }
}
